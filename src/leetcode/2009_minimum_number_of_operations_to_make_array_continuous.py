from bisect import bisect_right
from typing import List


# TODO: implement binary search myself
class Solution:
    def minOperations(self, nums: List[int]) -> int:
        n = len(nums)
        ans = n
        nums = set(nums)
        nums = list(nums)
        nums.sort()
        for i in range(len(nums)):
            left = nums[i]
            right = left + n - 1
            j = bisect_right(nums, right)
            count = j - i
            ans = min(ans, n - count)
        return ans


s = Solution()
print(s.minOperations([4, 2, 5, 3]))
print(s.minOperations([1, 2, 3, 5, 6]))
print(s.minOperations([1, 10, 100, 1000]))
print(s.minOperations([1]))
print(s.minOperations(
    [7589, 1270, 2304, 5117, 8054, 553, 9083, 4659, 9297, 8299, 9815, 3000, 9836, 1055, 2814, 4756, 4956, 5317, 9376,
     9952, 2058, 3048, 4320, 6698, 841, 379, 6970, 4662, 1513, 2610, 7796, 3061, 9808, 9742, 5966, 6693, 8252, 3575,
     4180, 5606, 530, 8178, 9572, 9740, 4600, 8662, 6923, 4723, 8040, 8794, 7055, 6851, 2324, 1904, 318, 6267, 2231,
     4560, 9436, 2597, 723, 6077, 656, 7759, 8665, 3557, 7867, 6642, 4087, 1720, 1521, 8251, 8936, 3370, 8033, 8044,
     4555, 2385, 9282, 9622, 9959, 7091, 5924, 1014, 1775, 1711, 1948, 3363, 4214, 714, 2210, 7793, 8779, 9925, 9848,
     6347, 8944, 7594, 9914, 175, 3500, 1053, 1864, 9893, 1588, 7945, 9616, 5863, 45, 4035, 5218, 1956, 41, 4934, 3986,
     4517, 8774, 9636, 9545, 501, 666, 8280, 3572, 974, 3548, 1571, 8977, 8076, 8911, 6307, 9752, 5799, 4519, 1221,
     3447, 9310, 4571, 8817, 7547, 4166, 6062, 2837, 7905, 1725, 4574, 7212, 9383, 8406, 1336, 6376, 1007, 6198, 7706,
     5185, 9859, 4394, 3078, 1999, 1879, 672, 7288, 5006, 9339, 1898, 7784, 7104, 4763, 5984, 3944, 9142, 4456, 1675,
     747, 1808, 360, 2151, 9880, 7659, 2446, 7250, 4870, 5801, 6842, 574, 2646, 5973, 7412, 5110, 889, 9236, 8690, 4768,
     7082, 6473, 639, 7018, 363, 2799, 2869, 1076, 7017, 6048, 3340, 8903, 4781, 3460, 7065, 3608, 4464, 886, 8249,
     3308, 9054, 9657, 6555, 2150, 9837, 6547, 4462, 7507, 9094, 9121, 1889, 9272, 3962, 9376, 144, 794, 9713, 7570,
     3079, 4835, 4135, 8334, 512, 4072, 8072, 3961, 8765, 69, 3975, 4074, 1762, 1253, 1648, 3676, 8413, 8070, 9222,
     7727, 1174, 7400, 4429, 6331, 3348, 856, 68, 6156, 1282, 3627, 5407, 9178, 6350, 8597, 1367, 3253, 4889, 7781,
     7215, 6340, 3325, 6009, 4449, 6103, 2522, 4131, 6185, 7100, 1849, 934, 1658, 3322, 564, 3735, 8605, 1408, 6159,
     8088, 3198, 9843, 1180, 2120, 418, 2083, 7990, 3278, 7111, 8863, 7241, 44, 2635, 7508, 9772, 9831, 9087, 7461,
     5763, 7284, 3931, 153, 5243, 4022, 4452, 8184, 9420, 5757, 1643, 7474, 349, 4525, 9999, 5719, 8681, 8450, 6981,
     3409, 8081, 5857, 4524, 7455, 6946, 9189, 4890, 4973, 3133, 40, 4366, 6219, 2707, 8039, 1214, 386, 6173, 7091,
     5530, 786, 5715, 4352, 2119, 7089, 520, 4744, 6767, 7088, 9688, 3919, 9845, 3016, 7462, 2250, 1746, 8454, 7194,
     2032, 6069, 6079, 808, 7670, 1071, 4281, 728, 3638, 6015, 2492, 3921, 1684, 2623, 9814, 6003, 9421, 4167, 3612,
     3831, 8308, 7567]))  # 358
